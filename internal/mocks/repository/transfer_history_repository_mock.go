// Code generated by MockGen. DO NOT EDIT.
// Source: tek-bank/internal/db/repository (interfaces: TransferHistoryRepository)
//
// Generated by this command:
//
//	mockgen -destination=../../mocks/repository/transfer_history_repository_mock.go -package=repository tek-bank/internal/db/repository TransferHistoryRepository
//

// Package repository is a generated GoMock package.
package repository

import (
	reflect "reflect"
	models "tek-bank/internal/db/models"

	gomock "go.uber.org/mock/gomock"
)

// MockTransferHistoryRepository is a mock of TransferHistoryRepository interface.
type MockTransferHistoryRepository struct {
	ctrl     *gomock.Controller
	recorder *MockTransferHistoryRepositoryMockRecorder
}

// MockTransferHistoryRepositoryMockRecorder is the mock recorder for MockTransferHistoryRepository.
type MockTransferHistoryRepositoryMockRecorder struct {
	mock *MockTransferHistoryRepository
}

// NewMockTransferHistoryRepository creates a new mock instance.
func NewMockTransferHistoryRepository(ctrl *gomock.Controller) *MockTransferHistoryRepository {
	mock := &MockTransferHistoryRepository{ctrl: ctrl}
	mock.recorder = &MockTransferHistoryRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTransferHistoryRepository) EXPECT() *MockTransferHistoryRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockTransferHistoryRepository) Create(arg0 []models.TransferHistory) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockTransferHistoryRepositoryMockRecorder) Create(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockTransferHistoryRepository)(nil).Create), arg0)
}

// FetchByAccountNumber mocks base method.
func (m *MockTransferHistoryRepository) FetchByAccountNumber(arg0 int64) ([]models.TransferHistory, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchByAccountNumber", arg0)
	ret0, _ := ret[0].([]models.TransferHistory)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchByAccountNumber indicates an expected call of FetchByAccountNumber.
func (mr *MockTransferHistoryRepositoryMockRecorder) FetchByAccountNumber(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchByAccountNumber", reflect.TypeOf((*MockTransferHistoryRepository)(nil).FetchByAccountNumber), arg0)
}
